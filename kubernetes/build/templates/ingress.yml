#@ load("@ytt:data", "data")
#@ load("@ytt:assert", "assert")
#@ load("_ytt.lib.yml", "labels")

#@ if data.values.backman.ingress.enabled:
#@ if len(data.values.backman.ingress.hostname) == 0 or data.values.backman.ingress.hostname == "backman.example.org":
#@  assert.fail("backman.ingress.hostname is missing or invalid")
#@ end
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: backman
  namespace: backman
  labels: #@ labels("backman","ingress")
  annotations:
    kubernetes.io/ingress.class: "nginx"
    #@ if data.values.backman.ingress.cert_manager_tls.enabled:
    #@ if len(data.values.backman.ingress.cert_manager_tls.cluster_issuer) == 0:
    #@  assert.fail("data.values.backman.ingress.cert_manager_tls.cluster_issuer is missing")
    #@ end
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    cert-manager.io/cluster-issuer: #@ data.values.backman.ingress.cert_manager_tls.cluster_issuer
    #@ end
spec:
  #@ if/end data.values.backman.ingress.cert_manager_tls.enabled:
  tls:
  - secretName: backman-tls
    hosts:
    - #@ data.values.backman.ingress.hostname
  rules:
  - host: #@ data.values.backman.ingress.hostname
    http:
      paths:
      - backend:
          serviceName: backman
          servicePort: 8080
#@ end
